# I do not need kafka environment variables as I am not using Kafka

DEBUG = True

DATABASE_URL=postgresql://bilal:my_password@User-db-Cont:5432/user-db
TEST_DATABASE_URL=postgresql://bilal:my_password@User-db-Cont:5432/user-db

ALGORITHYM = 'HS256'
EXPIRY_TIME = 30
REFRESH_EXPIRY_DAYS = 7
SECRET_KEY = '6fa1b7aa3d4197038df22aa6b39ad2f30db1fe347b96a5276c9ab1b6b7053cf1'

#****************************************************************************************************************************************
# GENERATING SECRET_KEY 
#****************************************************************************************************************************************
#
# Method 1: May generate using the following code:
# 
# import secrets
# secret_key = secrets.token_hex(32)
# print("The secret key is", secret_key)
#
# However, this will generate a new key every time your backend microservice restarts, causing issues.
# For this reason, it must be hard-coded. 
#
# Method 2: For generating a hardcoded secret key, you may use the following command in the command prompt:
#
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# This command uses the crypto module in Node.js to generate a random sequence of 32 bytes and then converts it to a hexadecimal string.
#****************************************************************************************************************************************

